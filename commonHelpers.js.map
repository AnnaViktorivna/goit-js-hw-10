{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nlet userSelectedDate;\n\nconst activeButton = document.querySelector('[data-start]');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (selectedDate < currentDate) {\n      activeButton.disabled = true;\n      window.alert(`Choose the date in future`);\n      return;\n    } else {\n      userSelectedDate = selectedDate;\n      activeButton.disabled = false;\n    }\n  },\n};\n\nconst datetimePicker = flatpickr('#datetime-picker', options);\n\nactiveButton.addEventListener('click', () => {\n  setInterval(() => {\n    const current = Date.now();\n    const diff = userSelectedDate - current;\n    const timeObj = convertMs(diff);\n    updateTimerElement(timeObj);\n  }, 1000);\n});\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction updateTimerElement(timeObj) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(\n    timeObj.days\n  );\n  document.querySelector('[data-hours]').textContent = addLeadingZero(\n    timeObj.hours\n  );\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(\n    timeObj.minutes\n  );\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(\n    timeObj.seconds\n  );\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","activeButton","options","selectedDates","selectedDate","currentDate","flatpickr","current","diff","timeObj","convertMs","updateTimerElement","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"oGAEA,IAAIA,EAEJ,MAAMC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAC7BE,EAAc,IAAI,KACxB,GAAID,EAAeC,EAAa,CAC9BJ,EAAa,SAAW,GACxB,OAAO,MAAM,2BAA2B,EACxC,MACN,MACMD,EAAmBI,EACnBH,EAAa,SAAW,EAE3B,CACH,EAEuBK,EAAU,mBAAoBJ,CAAO,EAE5DD,EAAa,iBAAiB,QAAS,IAAM,CAC3C,YAAY,IAAM,CAChB,MAAMM,EAAU,KAAK,MACfC,EAAOR,EAAmBO,EAC1BE,EAAUC,EAAUF,CAAI,EAC9BG,EAAmBF,CAAO,CAC3B,EAAE,GAAI,CACT,CAAC,EACD,SAASC,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIN,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASC,EAAmBF,EAAS,CACnC,SAAS,cAAc,aAAa,EAAE,YAAcQ,EAClDR,EAAQ,IACZ,EACE,SAAS,cAAc,cAAc,EAAE,YAAcQ,EACnDR,EAAQ,KACZ,EACE,SAAS,cAAc,gBAAgB,EAAE,YAAcQ,EACrDR,EAAQ,OACZ,EACE,SAAS,cAAc,gBAAgB,EAAE,YAAcQ,EACrDR,EAAQ,OACZ,CACA,CAEA,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}